/*
 * Copyright (c) 2023 Flamwenco
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

// Combo helper
#define COMBO(NAME, BINDINGS, KEYPOS, TIMEOUT, LAYERS) \
    combo_##NAME { \
        timeout-ms = <TIMEOUT>; \
        bindings = <BINDINGS>; \
        key-positions = <KEYPOS>; \
        layers = <LAYERS>; \
    };

&mt {
    tapping-term-ms = <170>;
};

/ {
    combos {
        compatible = "zmk,combos";
        
        /* Function keys */
        COMBO(fnone,   &kp F1,  1 16,  50,  1)
        COMBO(ftwo,    &kp F2,  2 16,  50,  1)
        COMBO(fthree,  &kp F3,  3 16,  50,  1)
        COMBO(ffour,   &kp F4,  4 16,  50,  1)
        COMBO(ffive,   &kp F5,  5 16,  50,  1)
        COMBO(fsix,    &kp F6,  6 16,  50,  1)
        COMBO(fseven,  &kp F7,  7 16,  100, 1)
        COMBO(feight,  &kp F8,  8 16,  100, 1)
        COMBO(fnine,   &kp F9,  9 16,  100, 1)
        COMBO(ften,    &kp F10, 10 16, 100, 1)
        COMBO(feleven, &kp F11, 1 17,  50,  1)
        COMBO(ftwelve, &kp F12, 2 17,  50,  1)

        /* Enter */
        COMBO(klenter, &kp RET, 20 21, 100, 0)
    };

    behaviors {
        as_ht: autoshift_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTOSHIFT_HOLD_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            bindings = <&shifted>, <&kp>;
        };
    };

    macros {
        shifted: macro_shifted_kp {
            #binding-cells = <1>;
            label = "MACRO_SHIFTED_KP";
            compatible = "zmk,behavior-macro-one-param";
            bindings =
                <&macro_press &kp LSHFT>,
                <&macro_param_1to1 &macro_tap &kp MACRO_PLACEHOLDER>,
                <&macro_release &kp LSHFT>;
        };

        as: autoshift {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            label = "AUTOSHIFT_KP";
            bindings =
                <&macro_press>,
                <&macro_param_1to1>,
                <&macro_param_1to2>,
                <&as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1>,
                <&macro_param_1to2>,
                <&as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
                bindings = <
   &kp TAB       &kp Q    &kp W    &kp E &kp R &kp T  /**/  &kp Y  &kp U  &kp I     &kp O    &kp P     &kp BSPC
   &mt LCTRL ESC &kp A    &kp S    &kp D &kp F &kp G  /**/  &kp H  &kp J  &kp K     &kp L    &kp RET
   &kp LSHFT     &kp Z    &kp X    &kp C &kp V &kp B  /**/  &kp N  &kp M  &kp COMMA &kp DOT  &kp FSLH
   &mo 3         &kp LALT &kp LGUI &lt 2 SPACE        /**/  &lt 1 SPACE   &kp RALT  &kp RGUI &mo 3
                >;

                sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
                bindings = <
   &as GRAVE &as N1  &as N2  &as N3  &as N4  &as N5  /**/  &as N6     &as N7      &as N8     &as N9    &as N0    &kp DEL
   &trans    &none   &none   &none   &kp F   &kp G   /**/  &as LBKT   &as MINUS   &as EQUAL  &as SEMI  &trans
   &trans    &none   &none   &none   &none   &none   /**/  &as RBKT   &as APOS    &as BSLH   &none     &none
   &trans    &trans  &trans  &trans                  /**/  &trans                 &trans     &trans    &trans
                >;

                sensor-bindings = <&inc_dec_kp C_PREV C_NEXT>;
        };

        raise_layer {
                bindings = <
   &none     &none   &kp C_VOL_DN &kp C_MUTE   &kp C_VOL_UP  &none  /**/  &none      &kp C_PREV  &kp C_PP   &kp C_NEXT &none    &kp DEL
   &trans    &none   &none        &none        &none         &none  /**/  &kp LEFT   &kp DOWN    &kp UP     &kp RIGHT  &trans
   &trans    &none   &none        &none        &none         &none  /**/  &none      &none       &none      &none      &none
   &trans    &trans  &trans       &trans                            /**/  &trans                 &trans     &trans     &trans
                >;

                sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
        };

        extra_layer {
                bindings = <
   &none      &none        &none        &none        &none        &none         /**/  &none           &none           &none           &none           &none           &none
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4  /**/  &rgb_ug RGB_EFF &rgb_ug RGB_HUI &rgb_ug RGB_SAI &rgb_ug RGB_SPI &rgb_ug RGB_BRI 
   &none      &none        &none        &none        &none        &none         /**/  &rgb_ug RGB_EFR &rgb_ug RGB_HUD &rgb_ug RGB_SAD &rgb_ug RGB_SPD &rgb_ug RGB_BRD
   &trans     &trans       &trans       &trans                                  /**/  &rgb_ug RGB_TOG                 &trans          &trans          &trans
                >;

                sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
        };
    };
};
